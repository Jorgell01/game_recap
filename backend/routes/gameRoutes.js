import express from "express"; // Importa Express para manejar las rutas
import {
  getGameInfo, // Controlador para obtener informaci√≥n de un juego por su ID
  crearPartida, // Controlador para registrar una nueva partida manualmente
  getHistorial, // Controlador para obtener el historial de partidas del usuario
  sincronizarSteamPartidas, // Controlador para sincronizar partidas desde Steam
} from "../controllers/gameController.js"; // Importa los controladores relacionados con juegos
import verifyToken from "../middleware/authMiddleware.js"; // Importa el middleware para verificar el token JWT

const router = express.Router(); // Crea un enrutador de Express

// ‚ûï Registrar una nueva partida manualmente
// Utiliza el middleware `verifyToken` para verificar que el usuario est√© autenticado
// Llama al controlador `crearPartida` para manejar la l√≥gica de registro de partidas
router.post("/session", verifyToken, crearPartida);

// üîç Obtener informaci√≥n de un juego por ID
// Llama al controlador `getGameInfo` para manejar la l√≥gica de obtenci√≥n de informaci√≥n del juego
router.get("/:id", getGameInfo);

// üìú Obtener historial de partidas del usuario
// Utiliza el middleware `verifyToken` para verificar que el usuario est√© autenticado
// Llama al controlador `getHistorial` para manejar la l√≥gica de obtenci√≥n del historial de partidas
router.get("/historial", verifyToken, getHistorial);

// üîÅ Sincronizar partidas desde Steam
// Utiliza el middleware `verifyToken` para verificar que el usuario est√© autenticado
// Llama al controlador `sincronizarSteamPartidas` para manejar la l√≥gica de sincronizaci√≥n de partidas desde Steam
router.post("/sync", verifyToken, sincronizarSteamPartidas);

export default router; // Exporta el enrutador para que pueda ser utilizado en el archivo principal de la aplicaci√≥n
